
CustomerHanSummaryStatisticDto[Utility->participation] {}

HanFilterCriteriaDto[Utility->participation] {
	HanCandidacy HanCandidacy
	bool PCT
	bool LCS
	RegistrationStatusFlags RegistrationStatus
	string LastName
	string FirstName
	string EmailAddress
	string ServiceAddress
	string UserName
	HanHealthFlags HanHealth
}

DeviceDto[Utility->device]{}

HanCustomerDto[Utility->participation] {
	string LastName
	string FirstName
	string ServiceAddress
	string SignInName
	MeterType MeterType
	List<DeviceDto> DeviceDto
}

ParticipationService[Utility->participation]{

	List<HanCustomerDto> GetCustomerHans(HanFilterCriteriaDto hanFilterCriteriaDto)
	CustomerHanSummaryStatisticDto GetCustomerHanSummaryStatistics()
	void OptIn(CustomerOptInDto customerOptInDto)
}

ParticipationFactory {

	inject ICustomerHanParticipationDao customerHanParticipationDao
	inject ICustomerHanSummaryStatisticDao customerHanSummaryStatisticDao
}

CustomerOptInDto[Utility->participation] {
	long CustomerAdminId
	string TimeToInstall
}

WorkOrderStatusDto[Utility->workOrder] {

	long WorkOrderStatusId
	long WorkOrderId
	DateTime WorkOrderDate
	long WorkOrderStatusTypeId
	string Notes
	long InstallerId

}

WorkOrderDto[Utility->workOrder] {

	long WorkOrderId
	long CustomerHanId
	string ServiceAddress
	string PreferredTime
	string ContactInformation
	string Notes
	DateTime InstallDate
	long InstallerId
	IList<WorkOrderStatusDto> WorkOrderStatusDto

}

WorkOrderService[Utility->workOrder] {

	WorkOrderDto GetWorkOrderById(long workOrderId)
	IList<WorkOrderDto> GetWorkOrdersByInstallerId(long installerId)
	WorkOrderDto SaveWorkOrder(WorkOrderDto workOrderDto)
	WorkOrderStatusDto SaveWorkOrderStatus(WorkOrderStatusDto workOrderStatusDto)

}

WorkOrderFactory {

	inject IWorkOrderDao workOrderDao
	inject IWorkOrderStatusDao workOrderStatusDao

}