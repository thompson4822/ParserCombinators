DREventService [Utility->drevents] {
	IList<CustomerHanEligibilityDto> GetEligibleCustomers(HanDeviceTypeEnum hanDeviceType)
	IList<DREventDto> GetMatchingEvents(DREventFilterCriteriaDto searchCriteria)
	DRWithStatusDto GetEventDetails(long eventId)
	DREventDto CreateDREvent(DREventDto newEvent)
	DREventDto TerminateCancelDemandResponseEvent(DREventDto demandResponseEvent)
}

HanHealthService[Utility->statistics] {
	List<HanHealthDto> GetHanHealthFilter(HanHealthFilterDto filter)
	HanHealthDto GetCustomerHanHealth(int customerHanId)
}

HanProgramService[Utility->participation] {
	IList<HanProgramDto> GetAllHanPrograms()
}

InstallationService[Utility->installation] {
	List<WorkOrderListDto> GetMatchingWorkOrders(WorkOrderCriteriaDto workOrderCriteria)
	CustomerHardwareDto GetCustomerHardware(long customerHanId)
	CustomerHardwareDto SetCustomerHardware(CustomerHardwareDto customerHardware)
}

ParticipationService[Utility->participation]{
	List<HanCustomerDto> GetParticipationStatus(HanFilterCriteriaDto hanFilterCriteriaDto)
	CustomerHanSummaryStatisticDto GetParticipationStatusSummaryStatistics()
	bool OptIn(CustomerOptInDto customerOptInDto)
	CustomerHanProgramDto GetCustomerPrograms(long customerAdministrationId)
	bool Approve(List<ParticipationApprovalDto> participationApprovals)
}

RegisterHanService [Utility->installation] {
	bool InitializeDevice(long hanDeviceId, int durationInMinutes)
	BridgeInitializeResponseDto InitializeBridge(long customerHanId)
}

SummaryStatisticsService[Utility->statistics]
{
	SummaryStatisticsDto GetSummaryStatistics()
	HistoricalStatisticsDto GetHistoricalStatistics()
}

UpdateHanService[Utility->updateHan] {
	HanStatusTypeEnum GetCurrentHanStatus(long consumerId)
}

WorkOrderService[Utility->installation] {

	WorkOrderDto GetWorkOrderById(long workOrderId)
	IList<WorkOrderDto> GetWorkOrdersByInstallerId(long installerId)
	WorkOrderDto SaveWorkOrder(WorkOrderDto workOrderDto, long approverId)
}

